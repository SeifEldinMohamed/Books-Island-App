plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
 //   id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id ("org.jlleitschuh.gradle.ktlint") version "11.0.0"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.seif.booksislandapp"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")

ktlint {
    android = true // to make kllint knows that it's android project
    ignoreFailures = false // if there is a failure for this ktlint check  ( app will not launch until you fix this issues before)
    disabledRules = ["import-ordering", "max-line-length", "final-newline", "no-wildcard-imports"]
    reporters { // one way of reporting linting issues
        reporter "plain" // plain.txt file
        reporter "checkstyle" // for xml
        reporter "sarif"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Unit Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    // mockito
    testImplementation "org.mockito:mockito-core:4.3.1"

    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.test:runner:1.5.1"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.4"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.43.2'
    // mockito
    androidTestImplementation "org.mockito:mockito-core:4.3.1"


    // Ui Testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    //Jetpack Navigation Component
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    //fragment
    implementation 'androidx.fragment:fragment-ktx:1.5.4'

    //Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.43.2'
    kapt 'com.google.dagger:hilt-android-compiler:2.43.2'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'


    // Firebase
    implementation 'com.google.firebase:firebase-firestore:24.4.1'
    implementation 'com.google.firebase:firebase-auth:21.1.0'
    implementation 'com.google.firebase:firebase-storage-ktx:20.1.0'
    implementation 'com.google.firebase:firebase-database-ktx:20.1.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4"
    // Import the Firebase BoM: your app will always use compatible versions of Firebase Android libraries.
    implementation 'com.google.firebase:firebase-bom:31.1.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    

    // Paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"

    // RecyclerView animation
    implementation 'jp.wasabeef:recyclerview-animators:4.0.2'

    // Swipe Refresh Layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // coil
    implementation "io.coil-kt:coil-compose:1.3.1"

    // shimmer effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
}